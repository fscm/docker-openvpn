#!/bin/sh
#
# Shell script to obtain the configurations for a OpenVPN client.
#
# Copyright 2016-2020, Frederico Martins
#   Author: Frederico Martins <http://github.com/fscm>
#
# SPDX-License-Identifier: MIT
#
# This program is free software. You can use it and/or modify it under the
# terms of the MIT License.
#

set -e

BASENAME=$(basename "${0}")

# Variables
OPENVPN_USERNAME=

__EASYRSA_DATA__="${EASYRSA_DATA_DIR:-/data/easyrsa}"
__OPENVPN_DATA__="${OPENVPN_DATA_DIR:-/data/openvpn}"

# Configuration files
OPENVPN_ENV="${__OPENVPN_DATA__}/env"

# Usage
show_usage() {
  echo "Usage: ${BASENAME} [options]"
  echo "  options:"
  echo "    -u <USERNAME>  The username of the OpenVPN client."
}

# Options parsing
while getopts ":u:" opt; do
  case $opt in
    u)
      OPENVPN_USERNAME=${OPTARG}
      ;;
    \?)
      echo >&2 "  [ERROR] Invalid option: -${OPTARG}"
      exit 1
      ;;
    :)
      echo >&2 "  [ERROR] Option -${OPTARG} requires an argument"
      exit 2
      ;;
  esac
done

# Check arguments
if [ $# -eq 0 ]; then
  show_usage
  exit 3
fi

# Check requirements
if [ "x${OPENVPN_USERNAME}" = "x" ]; then
  echo >&2 "  [ERROR] The username (-u) option is mandatory."
  exit 4
fi

# Check if client credentials exist
if [ ! -f "${__EASYRSA_DATA__}/pki/private/${OPENVPN_USERNAME}.key" ]; then
  echo >&2 "  [ERROR] Unable to find client '${OPENVPN_USERNAME}' information."
  exit 5
fi

# Import env
if [ -f ${OPENVPN_ENV} ]; then
  . ${OPENVPN_ENV}
else
  echo >&2 "  [ERROR] OpenVPN information is missing."
  exit 6
fi

# Generate the configurations
cat <<EOF
client
nobind
proto ${OVPN_SERVER_PROTO}
dev tun
resolv-retry infinite
remote-cert-tls server
tls-client
<key>
$(cat "${__EASYRSA_DATA__}/pki/private/${OPENVPN_USERNAME}.key")
</key>
<cert>
$(cat "${__EASYRSA_DATA__}/pki/issued/${OPENVPN_USERNAME}.crt")
</cert>
<ca>
$(cat "${__EASYRSA_DATA__}/pki/ca.crt")
</ca>
<tls-auth>
$(cat "${__EASYRSA_DATA__}/pki/ta.key")
</tls-auth>
pull
comp-lzo
key-direction 1
remote ${OVPN_SERVER_CN} ${OVPN_SERVER_PORT} ${OVPN_SERVER_PROTO}
persist-key
persist-tun
verb 3
EOF
[ "${OVPN_DEFROUTE}" -gt 0 ] && echo 'redirect-gateway def1'

# All done
exit 0
